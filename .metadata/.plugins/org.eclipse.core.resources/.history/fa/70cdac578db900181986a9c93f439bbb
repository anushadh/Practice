package problems.algorithms;

import java.util.HashMap;
import java.util.Map;

/*766. Toeplitz Matrix

A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same element.

Now given an M x N matrix, return True if and only if the matrix is Toeplitz.*/

public class ToeplitzMatrix {

	public static void main(String[] args) {
		ToeplitzMatrix tm = new ToeplitzMatrix();
		int[][] matrix = {
		                  {1,2},
		                  {5,1},
		                  
		                };
		System.out.println(tm.isToeplitzMatrix(matrix));
	}
	
	/*public boolean isToeplitzMatrix(int[][] matrix) {
        for(int i = 1; i < matrix.length; i++) {
        	for(int j = 1; j < matrix[0].length; j++) {
        		if(matrix[i][j] != matrix[i-1][j-1]) {
        			return false;
        		}
        	}
        }
        return true;
        
       
    }*/
	
	/*//Using extra space - difference of diagonal coordinates
	public boolean isToeplitzMatrix(int[][] matrix) {
		Map<Integer, Integer> groups = new HashMap<>();
        for(int i = 0; i < matrix.length; i++) {
        	for(int j = 0; j < matrix[0].length; j++) {
        		if(!groups.containsKey(i-j)) {
        			groups.put(i-j, matrix[i][j]);
        			
        		} else if(matrix[i][j] != groups.get(i-j)) {
    				return false;
    			}
        		
        	}
        }
        return true;
    }*/
}
