package problems.algorithms;

import java.util.Arrays;

public class PlusOne {

	public static void main(String[] args) {
		PlusOne po = new PlusOne();
		int[] digits = {9,8,7,6,5,4,3,2,1,9};
		int[] plusOne = po.plusOne(digits);
		System.out.println(Arrays.toString(plusOne));
	}
	
	public int[] plusOne(int[] digits) {
		int length = digits.length;
		if(length == 0) {
			return new int[] {1};
		}
		
		if(digits[length-1] < 9) {
			digits[length-1] = digits[length-1] + 1;
			return digits;
		} else {
			for(int i = length - 1; i >=0; i++) {
				
			}
		}
		
		
		return digits;
		
    }
	
	/*public int[] plusOne(int[] digits) {
		if(digits.length == 0 || digits == null) {
			return new int[] {1};
		}
		StringBuffer sb = new StringBuffer();
		for(int i : digits) {
			sb.append(i);
		}
		long plusOne = Long.parseLong(sb.toString()) + 1;
		String newS = Long.toString(plusOne);
		int[] finalInt = new int[newS.length()];
		for(int i = 0; i < newS.length(); i++) {
			finalInt[i] = Integer.parseInt(String.valueOf(newS.charAt(i)));
		}
		return finalInt;
    }*/
}
