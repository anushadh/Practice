package problems.algorithms;

/*Problem 9:
 * 
Determine whether an integer is a palindrome. An integer is a 
palindrome when it reads the same backward as forward.*/

public class PalindromeNumber {

	public static void main(String args[]) {
		PalindromeNumber pn = new PalindromeNumber();
		int x = 10;
		System.out.println(pn.isPalindrome(x));
	}

	/*//O(N)
	public boolean isPalindrome(int x) {
		if(x == 0) return true;
		if(x < 0) return false;
		String s = Integer.toString(x);
		StringBuffer sb = new StringBuffer();
		for(int i = s.length()-1; i >= 0; i--) {
			sb.append(s.charAt(i));
		}
		if((long) x == Long.parseLong(sb.toString())) {
			return true;
		}
		return false;
	}*/

	//O(Log N)
	public boolean isPalindrome(int x) {
		if(x == 0) return true;
		if(x < 0) return false;
		while(x != 0) {
			long reverse = 0;
			int rem = x%10;
			reverse = (reverse * 10) + rem;
		}
		if((long) x == reverse) {
			return true;
		}
		return false;
	}
}
