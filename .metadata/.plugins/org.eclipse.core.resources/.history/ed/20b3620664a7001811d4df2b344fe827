package problems.algorithms;

import java.util.Arrays;

/*80. Remove Duplicates from Sorted Array II
Given a sorted array nums, remove the duplicates in-place such that duplicates appeared 
at most twice and return the new length.

Do not allocate extra space for another array, you must do this by modifying 
the input array in-place with O(1) extra memory.*/

public class RemoveDuplicatesfromSortedArrayII {

	public static void main(String[] args) {
		RemoveDuplicatesfromSortedArrayII rdsa = new RemoveDuplicatesfromSortedArrayII();
		int[] nums = {};
		rdsa.removeDuplicates(nums);
		System.out.println(Arrays.toString(nums));
	}
	
	public int removeDuplicates(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        
        int count = 0;
        int value = nums[0];
        int length = nums.length;
        for(int i = 0; i < length; i++) {
        	if()
        }
    }
}
