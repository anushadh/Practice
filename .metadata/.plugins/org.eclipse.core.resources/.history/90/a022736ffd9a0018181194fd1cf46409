package problems.algorithms;

public class RomanToIntger {
	
	public static void main(String[] args) {
		RomanToIntger rt = new RomanToIntger();
		String s = "LVIII";
		System.out.println(rt.romanToInt(s));
	}
	
	public int romanToInt(String s) {
/*        String finalString = "";
        finalString = s.replace("IV", "4");
        finalString = s.replace("IX", "9");
        finalString = s.replace("XL", "40");
        finalString = s.replace("XC", "90");
        finalString = s.replace("CD", "400");
        finalString = s.replace("CM", "900");*/
        
        int finalValue = 0;
        int length = s.length();
        for(int i = 0; i < length; i++) {
        	if(s.charAt(i) == 'I'  && i+1 < length && (s.charAt(i+1) == 'V')) {
        		finalValue += 4;
        		i = i+1;
        	} else if(s.charAt(i) == 'I'  && i+1 < length && (s.charAt(i+1) == 'X')) {
        		finalValue += 9;
        		i = i+1;
        	} else if(s.charAt(i) == 'X'  && i+1 < length && (s.charAt(i+1) == 'L')) {
        		finalValue += 40;
        		i = i+1;
        	} else if(s.charAt(i) == 'X'  && i+1 < length && (s.charAt(i+1) == 'C')) {
        		finalValue += 90;
        		i = i+1;
        	} else if(s.charAt(i) == 'C'  && i+1 < length && (s.charAt(i+1) == 'D')) {
        		finalValue += 400;
        		i = i+1;
        	} else if(s.charAt(i) == 'C'  && i+1 < length && (s.charAt(i+1) == 'M')) {
        		finalValue += 900;
        		i = i+1;
        	} else if(s.charAt(i) == 'I') {
        		finalValue += 1;
        	} else if(s.charAt(i) == 'V') {
        		finalValue += 5;
        	} else if(s.charAt(i) == 'X') {
        		finalValue += 10;
        	} else if(s.charAt(i) == 'L') {
        		finalValue += 50;
        	} else if(s.charAt(i) == 'C') {
        		finalValue += 100;
        	} else if(s.charAt(i) == 'D') {
        		finalValue += 500;
        	} else if(s.charAt(i) == 'M') {
        		finalValue += 1000;
        	}
        }
        
        return finalValue;
        
       /* switch (s) {
    		case "IV" : return "4";
        }*/
        
    }
	
}
